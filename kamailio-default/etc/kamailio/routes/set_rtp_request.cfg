route[SET_RTP_REQUEST] {
    #Check if the method is anything other than UPDATE or INVITE, 
	if (!is_method("UPDATE|INVITE")) {
        return 0;
	}
    if (sdp_content()) {
        $avp(originalSDP) = $rb;

        if(isflagset(FLT_FROM_PUBLIC)){
            xlog("L_INFO", "SET_RTP_REQUEST | FROM_PUBLIC IS SET |  PROTO = $proto \n");
            if (proto==TLS) {
                xlog("L_INFO", "SET_RTP_REQUEST | proto is TLS! Convert to unencrypted RTP in the core \n");
				rtpengine_manage("RTP/AVP replace-origin replace-session-connection SIP-source-address ICE=remove direction=public direction=core");
            }
        }

        if(isflagset(FLT_FROM_CORE)){
            xlog("L_INFO", "SET_RTP_REQUEST | FROM_CORE IS SET\n");
            # Check if the remote user is registered. 
            if(reg_fetch_contacts("location", "$ru", "caller")) {
                # Add SRTP to the out going INVITE for remote registered devices
                xlog("L_INFO", "SET_RTP_REQUEST | REGISTERED USER FOUND - Using SRTP\n");
                rtpengine_manage("RTP/SAVP replace-origin replace-session-connection direction=core direction=public");
            } else { 
                # If not a registered user, perform the standard nat translations and leave media alone
                xlog("L_INFO", "SET_RTP_REQUEST | Non registered device: Using unecrypted RTP \n");
                rtpengine_manage("replace-origin replace-session-connection direction=core direction=public");
            }
        set_body("$avp(modifiedSDP)","application/sdp");      
    }       
  } 
}
